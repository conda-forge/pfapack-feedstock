{% set name = "pfapack" %}
{% set version = "0.2.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  - url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
    sha256: 6c388f0a65a96fd3a5d7e593b822081a0bf5454a791f24d0e3f4bfb80275faa1
    folder: python
  - url: https://michaelwimmer.org/pfapack.tgz
    sha256: b68fc35dda23ee24c358641b1a92ef701c4ffa0b3f0b0808b24e68afeb58ef07
    folder: pfapack

build:
  number: 0
  skip: True  # [py<36]

requirements:
  build:
    - {{ compiler('c') }}  # [not win]
    - {{ compiler('fortran') }}  # [not win]
  host:
    - python
    - liblapack  # [not win]
    - libopenblas  # [not win]
    - libblas  # [not win]
    - pip
  run:
    - python
    - scipy
    - numpy

test:
  imports:
    - pfapack

about:
  home: https://github.com/basnijholt/pfapack
  license: MIT
  license_family: MIT
  license_file: python/LICENSE
  summary: 'Efficient numerical computation of the Pfaffian for dense and banded skew-symmetric matrices'
  description: |
    Computing the Pfaffian of a skew-symmetric matrix is a problem that arises in various fields of physics.
    Both computing the Pfaffian and a related problem, computing the canonical form of a skew-symmetric matrix
    under unitary congruence, can be solved easily once the skew-symmetric matrix has been reduced to
    skew-symmetric tridiagonal form. We develop efficient numerical methods for computing this tridiagonal
    form based on Gauss transformations, using a skew-symmetric, blocked form of the Parlett-Reid algorithm,
    or based on unitary transformations, using block Householder transformations and Givens rotations,
    that are applicable to dense and banded matrices, respectively. We also give a complete and fully
    optimized implementation of these algorithms in Python.

  doc_url: https://pfapack.readthedocs.io/
  dev_url: https://github.com/basnijholt/pfapack

extra:
  recipe-maintainers:
    - basnijholt
